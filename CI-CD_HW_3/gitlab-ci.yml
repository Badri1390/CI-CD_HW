image: busybox:latest

stages:
  - build
  - test
  - deploy
  - stop

variables:
  IMAGE_TAG: $CI_COMMIT_BRANCH-$CI_COMMIT_SHORT_SHA

cache:
  key:
    files:
      - composer.lock
  paths:
    - vendor/


before_script:
  - echo "Before script section"
  - echo "For example you might run an update here or install a build dependency"
  - echo "Or perhaps you might print out some debugging details"

after_script:
  - echo "After script section"
  - echo "For example you might do some cleanup here"

build1:
  stage: build
  script:
    - echo "Do your build here"
    - echo one >> house.txt
    - mkdir -p vendor/
    - echo "build" > vendor/hello.txt
#    - sleep 60

docker build:
  image: docker:latest
  stage: build
  services:
    - docker:dind
  script:
    - docker login -u $GITLAB_CI_USER -p $GITLAB_CI_PASSWORD $CI_REGISTRY
    - echo $GITLAB_CI_USER $GITLAB_CI_PASSWORD $CI_REGISTRY $CI_REGISTRY_IMAGE:$IMAGE_TAG
    - docker build -t $CI_REGISTRY_IMAGE:$IMAGE_TAG .
    - docker push $CI_REGISTRY_IMAGE:$IMAGE_TAG

test1:
  stage: test
#  resource_group: phone
  script:
    - echo "Do a test here"
    - echo "For example run a test suite"
    - sleep 20
#    - grep one house.txt
#    - sleep 60
#    - cat vendor/hello.txt
    
#    - sleep 10

 

test2:
  image: docker:latest
  stage: test
  services:
    - docker:dind
  script:
    - echo "Do another parallel test here"
    - echo "For example run a lint test"
    - docker run $CI_REGISTRY_IMAGE:$IMAGE_TAG
    - docker ps 
    - echo "----------TEST DOCKER IMAGE--------"
#    - grep two house.txt

deploy to preprod:
  stage: deploy
  variables:
    MY_LOGIN: preprod_login
  script:
    - echo "Your login for preprod is ${MY_LOGIN}"
    - echo "Password is ${MY_PASSWORD}"
  only:
    - main
  environment:
    name: preprod
    on_stop: stop to preprod
    auto_stop_in: 1 day

stop to preprod:
  stage: stop
  variables:
    TARGET_ENV: preprod
  script:
    - echo "STOP ${TARGET_ENV}"
  only:
    - main
  when: manual
  environment:
    name: preprod
    action: stop


deploy to production:
  stage: deploy
  variables:
    MY_LOGIN: production_login
  script:
    - echo "Your login for production is ${MY_LOGIN}"
    - echo "Password is ${MY_PASSWORD}"
  only:
    - main
  when: manual
  environment:
    name: production

pages:
  stage: deploy
  script:
    - mkdir -p public
    - cp index.html public/index.html
    - echo 404 >> public/404.html
  artifacts:
    exclude:
    - public/404.html
    paths:
      - public
  only:
    - main
